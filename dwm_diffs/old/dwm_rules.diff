diff --git a/config.def.h b/config.def.h
index 1c0b587..c346135 100644
--- a/config.def.h
+++ b/config.def.h
@@ -26,9 +26,26 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class                  instance    title                         tags mask     iscentered     isfloating   monitor */
+    // Non FLoating
+	{ "Gimp",                 NULL,       NULL,                         0,            1,             0,           -1 },
+	{ "Firefox",              NULL,       NULL,                         2,            1,             0,           -1 },
+	{ "Chromium-browser",     NULL,       NULL,                         2,            1,             0,           -1 },
+	{ "TelegramDesktop",      NULL,       NULL,                         1 << 7,       1,             0,           -1 },
+    { "Thunderbird",          NULL,       NULL,                         1 << 6,       1,             0,           -1 },
+    { "Hexchat",              NULL,       NULL,                         1 << 5,       1,             0,           -1 },
+    { "mpv",                  NULL,       "*- mpv",                     0,            1,             0,           -1 },
+    { "libreoffice-*",        NULL,       NULL,                         0,            1,             0,           -1 },
+    // Floating
+    { "St",                   NULL,       "st+",                        0,            1,             1,           -1 },
+    { "copyq",                NULL,       NULL,                         0,            1,             1,           -1 },
+    { "Arandr",               NULL,       NULL,                         0,            1,             1,           -1 },
+    { "Gcolor3",              NULL,       "Color picker",               0,            1,             1,           -1 },
+    { "Gnome-calculator",     NULL,       "Calculator",                 0,            1,             1,           -1 },
+    { "Hexchat",              NULL,       "Network List - HexChat",     1 << 5,       1,             1,           -1 },
+    { "SimpleScreenRecorder", NULL,       NULL,                         0,            1,             1,           -1 },
+    { "Soffice",              NULL,       "Print",                      0,            1,             1,           -1 },
+    { "Chrome",               NULL,       "Save File",                  2,            1,             1,           -1 },
 };
 
 /* layout(s) */
diff --git a/dwm.c b/dwm.c
index 41c6767..7719cbb 100644
--- a/dwm.c
+++ b/dwm.c
@@ -92,7 +92,7 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
+	int isfixed, iscentered, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
 	Client *next;
 	Client *snext;
 	Monitor *mon;
@@ -137,6 +137,7 @@ typedef struct {
 	const char *instance;
 	const char *title;
 	unsigned int tags;
+	int iscentered;
 	int isfloating;
 	int monitor;
 } Rule;
@@ -249,7 +250,7 @@ static void (*handler[LASTEvent]) (XEvent *) = {
 	[ConfigureRequest] = configurerequest,
 	[ConfigureNotify] = configurenotify,
 	[DestroyNotify] = destroynotify,
-	[EnterNotify] = enternotify,
+	/* [EnterNotify] = enternotify, */
 	[Expose] = expose,
 	[FocusIn] = focusin,
 	[KeyPress] = keypress,
@@ -297,6 +298,7 @@ applyrules(Client *c)
 		&& (!r->class || strstr(class, r->class))
 		&& (!r->instance || strstr(instance, r->instance)))
 		{
+			c->iscentered = r->iscentered;
 			c->isfloating = r->isfloating;
 			c->tags |= r->tags;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
@@ -751,24 +753,24 @@ drawbars(void)
 		drawbar(m);
 }
 
-void
-enternotify(XEvent *e)
-{
-	Client *c;
-	Monitor *m;
-	XCrossingEvent *ev = &e->xcrossing;
+/* void */
+/* enternotify(XEvent *e) */
+/* { */
+/* 	Client *c; */
+/* 	Monitor *m; */
+/* 	XCrossingEvent *ev = &e->xcrossing; */
 
-	if ((ev->mode != NotifyNormal || ev->detail == NotifyInferior) && ev->window != root)
-		return;
-	c = wintoclient(ev->window);
-	m = c ? c->mon : wintomon(ev->window);
-	if (m != selmon) {
-		unfocus(selmon->sel, 1);
-		selmon = m;
-	} else if (!c || c == selmon->sel)
-		return;
-	focus(c);
-}
+/* 	if ((ev->mode != NotifyNormal || ev->detail == NotifyInferior) && ev->window != root) */
+/* 		return; */
+/* 	c = wintoclient(ev->window); */
+/* 	m = c ? c->mon : wintomon(ev->window); */
+/* 	if (m != selmon) { */
+/* 		unfocus(selmon->sel, 1); */
+/* 		selmon = m; */
+/* 	} else if (!c || c == selmon->sel) */
+/* 		return; */
+/* 	focus(c); */
+/* } */
 
 void
 expose(XEvent *e)
@@ -1049,6 +1051,11 @@ manage(Window w, XWindowAttributes *wa)
 		&& (c->x + (c->w / 2) < c->mon->wx + c->mon->ww)) ? bh : c->mon->my);
 	c->bw = borderpx;
 
+	if(c->iscentered) {
+		c->x = (c->mon->mw - WIDTH(c)) / 2;
+		c->y = (c->mon->mh - HEIGHT(c)) / 2;
+	}
+
 	wc.border_width = c->bw;
 	XConfigureWindow(dpy, w, CWBorderWidth, &wc);
 	XSetWindowBorder(dpy, w, scheme[SchemeNorm][ColBorder].pixel);
